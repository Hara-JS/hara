[그리드 레이아웃]
반응형 웹 디자인에서 웹 문서 요소를 배치하는 기준
웹 사이트 화면을 여러 개의 칼럼(column)으로 나눈 후 웹 요소를 배치
화면을 규칙적으로 배열하으로 레이아웃을 일관성 있게 유지할 수 있음


[그리드 레이아웃의 특징]
시각적으로 안정된 디자인
업데이트가 편한 웹 디자인 구성
요소를 자유롭게 배치


[플렉스 박스 레이아웃(flex box layout 플렉서블 박스 레이아웃)]
그리드 레이아웃을 기본으로 플렉스 박스를 원하는 위치에 배치하는 것
여유 공간에 따라 너비나 높이, 위치를 자유롭게 변형할 수 있음
		플렉스 컨테이너(부모 박스) : 플렉스 박스 레이아웃을 적용할 대상을 묶는 요소
		플렉스 항목(자식 박스) : 플렉스 박스 레이아웃을 적용할 대상
		주축(main axis) : 플렉스 컨테이너 안에서 플렉스 항목을 배치하는 기본 방향. 기본적으로 왼쪽에서 오른쪽이며 수평 방향으로 배치. 플렉스 항목의 배치가 시작되는 위치를 주축 시작점, 끝나는 위치를 주축 끝점이라고 함
		교차축(cross axis) : 주축과 교차하는 방향을 말하며 기본적으로 위에서 아래로 배치. 플렉스 항복의 배치가 시작되는 위치를 교차축 시작점, 끝나는 위치를 교차축 끝점이라고 함

https://developer.mozilla.org/ko/docs/Learn/CSS/CSS_layout/Flexbox
https://flexboxfroggy.com/#ko
http://flexboxdefense.com


[플렉스 박스 레이아웃 속성]
display : 플렉스 컨테이너를 지정

flex-direction : 플렉스 항목에서 주축과 방향을 지정

flex-wrap : 컨테이너 너비보다 항목이 많을 경우 줄 바꿈 여부를 지정 (디폴트 : nowrap)

flex-flow : 배치 방향과 줄 바꿈을 한꺼번에 지정

judtify-content : 주축에서 플렉스 항목 정렬 방법을 지정

align-items : 교차축에서 플렉스 항목 정렬 방법을 지정

align-self : 특정 플렉스 항목의 정렬 방법을 지정

align-content : 여러 줄일 때 교차축 정렬 방법을 지정

flex : 플렉스 항목의 너비를 줄이거나 늘림


[CSS 그리드 레이아웃]
플렉스 박스 레이아웃은 주축/교차축 개념이 있지만 CSS 그리드 레이아웃은 양쪽 방향 모두 사용 (플렉스 그리드 레이아웃은 1차원, CSS 그리드 레이아웃은 2차원이라고도 함)
줄(row)과 칼럼(column)으로 화면을 구성하고, 줄 사이의 여백, 칼럼 사이의 여백을 조절


[CSS 그리드 레이아웃의 속성과 함수]
display : 그리드 컨테이너를 지정

grid-template-columns : 칼럼을 지정
	fr(fractional unit 비율 단위) : 사용 가능한 공간을 해당 비율에 따라 분배

grid-template-rows : 줄 높이를 지정

grid-column-gap : 칼럼과 칼럼 사이의 간격을 지정

grid-row-gap : 줄과 줄 사이의 간격을 지정

grid-gap : 칼럼과 줄 사이의 간격을 한꺼번에 지정

minmax() : 최솟값과 최댓값을 지정하는 함수

repeat() : 같은 값을 여러 번 반복할 때 사용하는 함수

auto-fit : 트랙의 최소길이의 합보다 컨테이너의 길이가 길어진 경우 빈공간을 콘텐츠가 채움

auto fill : 트랙의 최소길이의 합보다 컨테이너의 길이가 길어진 경우에 빈공간을 남김


[그리드 라인을 사용해 배치하기]
CSS 그리드 레이아웃에는 눈에 보이지 않는 그리드 라인이 포함되어 있음
그리드 라인을 사용해 그리드 항목을 배치할 수 있음
	grid-column-start : 칼럼 시작의 라인 번호를 지정
	grid-column-end : 칼럼 마지막의 라인 번호를 지정
	grid-column : 칼럼 시작 번호와 끝 번호 사이에 슬래시(/)를 넣어 사용
	grid-row-start : 줄 시작의 라인 번호를 지정
	grid-row-end : 줄 마지막의 라인 번호
	grid-row : 줄 시작 번호와 줄 끝 번호 사이에 슬래시(/)를 넣어 사용


[템플릿 영역을 만들어 배치하기]
grid-area 속성을 사용해 템플릿 영역을 만든 후 배치
	grid-area : 템플릿 영역 생성
	grid-template-areas : grid-area를 사용해 템플릿 영역 배치
		한 줄에 들어갈 템플릿 영역을 큰따옴표("")로 묶음
		빈 영역을 마침표(.)를 넣음