[문서 객체 모델(Document Object Model)]
자바 스크립트를 이용하여 웹 문서에 접근하고 제어할 수 있도록 객체를 사용해 웹 문서를 체계적으로 정리하는 방법
웹 문서와 그 안의 모든 요소를 객체로 인식하고 처리함
	웹 문서 전체를 document 객체, 삽입한 이미지는 image 객체


[DOM 트리]
웹 문서에 있는 요소들 간의 부모, 자식 관계를 계층 구조로 표시한 것
나무 형태가 되기 때문에 DOM 트리라고 함
노드(node) : DOM 트리에서 가지가 갈라져 나간 항목
루트 노트(root node) : DOM 트리의 시작 부분(html)


[DOM을 구성하는 원칙]
모든 HTML 태그는 요소(element) 노드
웹 문서의 텍스트 내용은 요소 노드의 자식 노드인 텍스트(text) 노드
태그의 속성은 요소 노드의 자식 노드인 속성(attribute) 노드
주석은 주석(comment) 노드


[DOM 요소에 접근]
웹 문서에서 원하는 요소를 찾아가는 것을 접근한다(access)고 함

getElementById("id명") : id명으로 접근

getElementsByClassName("class명") : 클래스명으로 접근하여 여러 요소가 배열 형태로 저장. 반환 값이 2개 이상일 수 있음. HTMLCollection 객체에 저장됨

getElementsByTagName("태그명") : 태그명으로 접근하여 여러 요소가 배열 형태로 저장. 반환 값이 2개 이상일 수 있음. HTMLCollection 객체에 저장됨

querySelector(선택자) : id명이나 선택자를 사용해 접근. 메서드는 한 개의 값만 반환. id 이름 앞에는 해시 기호(#), class 이름 앞에는 마침표(.), 태그는 기호 없이 태그명 사용

querySelectorAll(선택자 또는 태그) : 클래스명이나 태그명의 선택자를 사용해 접근. 반환 값이 여러 개일 때 모두 반환 -> 노드 리스트로 저장됨. id 이름 앞에는 해시 기호(#), class 이름 앞에는 마침표(.), 태그는 기호 없이 태그명 사용


[웹 요소 내용 수정]
요소명.innerText = "내용" : 텍스트 내용 표시

요소명.innerHTML = "내용" : 태그까지 반영하여 표시


[DOM 요소에 접근하고 속성 가져오기]
getAttribute("속성명") : 속성 노드의 값을 가져옴

setAttribute("속성명", "값") : 속성 노드의 값을 바꿈


[event 객체의 주요 프로퍼티]
altKey : 이벤트 발생시 alt를 눌렀는지 여부를 boolean 값으로 반환

button : 마우스에서 누른 버튼의 키값을 반환

charCode : keypress 이벤트가 발생할 때 어떤 키를 눌렀는지 유니코드 값으로 반환

ClientX : 이벤트가 발생한 가로 위치 반환

ClientY : 이벤트가 발생한 세로 위치 반환

ctrlKey : 이벤트 발생시 ctrl을 눌렀는지 여부를 boolean 값으로 반환

pageX : 현재 문서 기준으로 이벤트가 발생한 가로 위치를 반환

pageY : 현재 문서 기준으로 이벤트가 발생한 세로 위치를 반환

screenX : 현재 화면 기준으로 이벤트가 발생한 가로 위치를 반환

screenY : 현재 화면 기준으로 이벤트가 발생한 세로 위치를 반환

shiftKey : 이벤트 발생시 shift를 눌렀는지 여부를 boolean 값으로 반환

target : 이벤트가 최초로 발생한 대상을 반환

timeStamp : 이벤트가 발생한 시간을 반환

type : 발생한 이벤트 이름을 반환

which : 키보드와 관련된 이벤트가 발생할 때 키의 유니코드 값을 반환

preventDefault() : 이벤트를 취소할 수 있는 경우 취소. 이벤트가 발생한 대상에 접근 하려면 이벤트 처리기에서 예약어 this를 사용해야 함


[DOM에서 이벤트 처리]
이벤트 객체를 사용해 이벤트 처리기 연결

요소.addEventListner(이벤트, 함수, 캡처 여부);
	이벤트 : 이벤트 유형을 지정. 단 click과 keypress처럼 on을 붙이지 않고 사용
	함수 : 이벤트가 발생하면 실행할 명령이나 함수를 지정. 여기에서 함수를 정의할 때는 event 객체를 인수로 받음
	캡처 여부 : 이벤트를 캡처하는지 여부를 지정하며 기본값은 false이고 true와 false 중에서 선택 할 수 있음. true이면 캡처링, false이면 버블링한다는 의미. 이벤트 캡처링은 DOM의 부모 노드에서 자식 노드로 전달되는 것이고 이벤트 버블링은 COM의 자식 노드에서 부모 노드로 전달되는 것


[CSS 속성에 접근하기]
스타일 속성값을 가져와서 그 값을 원하는 대로 수정할 수 있음
해당 스타일이 적용된 HTML 요소 다음에 예약어 style을 쓰고 속성 표시
	color처럼 한 단어인 속성명은 그대로 사용. background-color처럼 중간에 하이픈이 있는 속성은 backgroundColor처럼 CamelCase로 표기

document.요소명.style.속성명


[DOM에서 노드 추가]
텍스트 노드를 사용하는 새로운 요소 추가
	createElement("노드명") : 요소 노드를 생성
	createTextNode("텍스트") : 텍스트 노드를 생성
	부모노드.appendChild(자식노드) : 텍스트 노드를 요소 노드의 자식으로 연결. 요소 노드를 DOM에 연결. 메서드를 사용해서 연결하는 자식 노드는 자식 노드 중에 맨 끝에 추가됨

속성값이 있는 새로운 요소 추가
	createElement() : 요소 노드 생성
	createAttribute(속성명) : 속성 노드 생성
	요소명.setAttributeNode(속성노드) : 속성 노드를 요소 노드의 자식으로 연결. 추가할 속성이 요소 노드에 이미 들어가 있다면 기존 속성 노드를 새 속성 노드로 대체
	appendChild() : 자식 노드 연결

[DOM에서 노드 삭제]
노드를 삭제할 때는 부모 노드에서 자식 노드를 삭제해야 함. 노드를 삭제하려면 부모 노드부터 찾아야 함

parentNode 프로퍼티 : 현재 노드의 부모 노드에 접근해서 부모 노드의 요소 노드를 반환
	노드.parentNode

removeChild() : 자식 노드 삭제
	부모노드.removeChild(자식노드)