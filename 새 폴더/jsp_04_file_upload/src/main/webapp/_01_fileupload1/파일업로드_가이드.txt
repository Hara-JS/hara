[파일 업로드 boardWrite.jsp 페이지 설명]
1. lib > cos.jar 파일을 추가한다.
2. 업로드 폴더를 생성한다.
	_01_fileupload1 > uploadFile
3. <form> 태그에 아래 세 가지 속성을 추가한다.
	(1) method 속성
		1) method = "post"
		2) 파일 업로드는 반드시 post 방식으로 사용한다.
	(2) id속성
		1) id="FILE_FORM"
		2) id속성은 <form>태그 안의 모든 데이터를 선택하기 위해서 필요하다.
		
	(3) enctype속성
		1) enctype="multipart/form-data"
		2) 파일 업로드는 enctype의 속성을 추가해야 사용할 수 있다.
	
	
	(예)
			<form method="post"  id="FILE_FORM" enctype="multipart/form-data">


------------------------------------------------------------------------------------------------


4. 함수에 대해 소개한다.
	(1) event.preventDefault()
		<form>은 버튼을 누르면 무조건 새로 고침을 한다.
		위 함수를 통해 새로 고침을 막는다.
	(2) let form = $('#FILE_FORM')[0];
      	let formData = new FormData(form);
		
		파일 업로드의 <form>은 위 두 줄을 통해 데이터를 가져올 수 있다.
	(3) 파일 업로드는 기존의 ajax 옵션과 다르다. 
		processData, contentType 옵션이 추가되며,
		data의 값은 위에서 생성한 formData를 지정한다. 
		
		$.ajax({
	        url: 'boardWritePro.jsp',
	        processData: false,
	        contentType: false,
	        data: formData,
	        type: 'POST',
	        success: function(result){
	         	alert("게시글을 작성했습니다.");
	         	location.href="boardMain.jsp";
	        },
	        
      }); 
	
	예)
		let boardWritePro = (event) => {
			event.preventDefault();
		             
		      let form = $('#FILE_FORM')[0];
		      let formData = new FormData(form);
		     		      
		      $.ajax({
			        url: 'boardWritePro.jsp',
			        processData: false,
			        contentType: false,
			        data: formData,
			        type: 'POST',
			        success: function(result){
			         	alert("게시글을 작성했습니다.");
			         	location.href="boardMain.jsp";
			        },
			        
		      }); 
		    return true;
		}	
		
		
------------------------------------------------------------------------------------------------

[파일 업로드 boardWritePro.jsp 페이지 설명]
1. 파일 업로드 경로를 설정한다.
	String filePathStr = application.getRealPath("/_01_fileupload1/uploadFile");
	
2. try - catch 구문을 사용한다.

3. 기존의 request는 사용하지 않고 새로운 MultipartRequest를 사용한다.
	파일 사이즈, 한글 인코딩, MultipartRequest를 생성한다.
	
	int maxPostSize= 1024*1024*10;
	String encoding="UTF-8";	    		
 	MultipartRequest mr = new MultipartRequest(request, filePathStr, maxPostSize, encoding, new DefaultFileRenamePolicy());
	
4. MultipartRequest는 데이터를 가져오는 방법이 크게 두 가지 이다. 
   (1) 일반 input 태그의 데이터를 가져오는 방법
   		String subject = mr.getParameter("subject");
   		String content = mr.getParameter("content");
   (2) 파일 input 태그의 데이터를 가져오는 방법
   
   		String item="";					// input태그의 name을 저장할 변수
    	String ofileName="";			// 업로드한 파일의 원본 이름을 저장할 변수
    	String reFileName="";			// 업로드한 파일의 이름이 겹칠 경우, 변경된 파일의 이름을 저장할 변수
    	
    	Enumeration fileList= mr.getFileNames();	
   		
   		(2-1) while문으로 아래와 같이 데이터를 꺼내온다.
   		while(fileList.hasMoreElements()){				//첨부파일 끝까지 계속 반복
	    		
     	  	item = (String)fileList.nextElement();
     	   	ofileName=mr.getOriginalFileName(item); 	 //원본 파일명	
     	  	reFileName=mr.getFilesystemName(item);		// 변경된 파일명 (파일명이 겹치지 않으면 변경안될수도있음)
     	   	
     	}
   		
   		
   		
   		
   		
   		
   		
   		
   		
   		
   		
   		
   		
   		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				
