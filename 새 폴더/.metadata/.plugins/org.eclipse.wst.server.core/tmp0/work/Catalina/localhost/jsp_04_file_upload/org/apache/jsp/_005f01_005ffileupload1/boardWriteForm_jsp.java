/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-08-12 10:57:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._005f01_005ffileupload1;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardWriteForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

		String tdColor = "lightblue";
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<br><br>\r\n");
      out.write("	<div align=\"center\">\r\n");
      out.write("		\r\n");
      out.write("		<h2>새 게시글 작성하기</h2>\r\n");
      out.write("		<form  id=\"FILE_FORM\"  method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("				<tr height=\"40\">\r\n");
      out.write("					<td width=\"150\" align=\"center\" bgcolor=\"");
      out.print( tdColor );
      out.write("\">제목</td>\r\n");
      out.write("					<td width=\"450\"><input type=\"text\" id=\"subject\" name=\"subject\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr height=\"40\">\r\n");
      out.write("					<td width=\"150\" align=\"center\" bgcolor=\"");
      out.print( tdColor );
      out.write("\">글내용</td>\r\n");
      out.write("					<td width=\"450\"><textarea rows=\"10\" cols=\"50\" id=\"content\" name=\"content\"></textarea></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr height=\"40\">\r\n");
      out.write("					<td width=\"150\" align=\"center\" bgcolor=\"");
      out.print( tdColor );
      out.write("\">사진첨부</td>\r\n");
      out.write("					<td width=\"450\" id=\"box\">\r\n");
      out.write("						 <p></p>	\r\n");
      out.write("						 <input type=\"file\" name=\"file1\">\r\n");
      out.write("						 <p></p>					\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr height=\"40\">\r\n");
      out.write("					<td width=\"150\" align=\"center\" colspan=\"2\" bgcolor=\"");
      out.print( tdColor );
      out.write("\">\r\n");
      out.write("	               		<button id=\"button-boardWritePro\">글쓰기</button>\r\n");
      out.write("						<button id=\"button-boardMain\">메인화면</button>					\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>				\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<script>		\r\n");
      out.write("		let boardWritePro = (event) => {\r\n");
      out.write("			event.preventDefault();\r\n");
      out.write("                     \r\n");
      out.write("              let form = $('#FILE_FORM')[0];\r\n");
      out.write("		      let formData = new FormData(form);\r\n");
      out.write("		     		      \r\n");
      out.write("		      $.ajax({\r\n");
      out.write("			        url: 'boardWritePro.jsp',\r\n");
      out.write("			        processData: false,\r\n");
      out.write("			        contentType: false,\r\n");
      out.write("			        data: formData,\r\n");
      out.write("			        type: 'POST',\r\n");
      out.write("			        success: function(result){\r\n");
      out.write("			         	alert(\"게시글을 작성했습니다.\");\r\n");
      out.write("			         	location.href=\"boardMain.jsp\";\r\n");
      out.write("			        },\r\n");
      out.write("			        \r\n");
      out.write("		      }); \r\n");
      out.write("            return true;\r\n");
      out.write("        }			\r\n");
      out.write("		\r\n");
      out.write("		let boardMain = (event) => {\r\n");
      out.write("			event.preventDefault();\r\n");
      out.write("			location.href='boardMain.jsp';\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		let num = 1;	\r\n");
      out.write("		\r\n");
      out.write("		let $btnBoardWritePro = document.querySelector(\"#button-boardWritePro\");\r\n");
      out.write("	   	$btnBoardWritePro.addEventListener(\"click\", boardWritePro);\r\n");
      out.write("		\r\n");
      out.write("	    let $btnBoardMain = document.querySelector(\"#button-boardMain\");\r\n");
      out.write("	    $btnBoardMain.addEventListener(\"click\", boardMain);\r\n");
      out.write("	    \r\n");
      out.write("    </script>	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
