[패키지(package)]
프로젝트의 하위 폴더의 개념

목적 : 클래스 파일을 목적별로 묶어서 관리. 패키지마다 이름 공간(namespace) 생성 → 클래스 이름의 충돌 방지

[임포트(import)]
다른 패키지의 클래스를 사용하고자 할 때 사용 (다른 패키지에서 사용하려면 public이어야 함)

방법 1 : 다른 패키지의 클래스 사용을 위해 클래스 이름의 전체 경로(패키지.클래스) 이름 사용
방법 2 : 다른 패키지의 클래스 사용을 위해 import 패키지명.클래스명 (패키지가 다른 동일한 이름의 클래스는 두 개 이상 import 불가)
// import abc.bcd.A; import bcd.cde.A;
// 패키지의 모든 클래스를 한번에 임포트하기 위해서는 *사용 (import abc.bcd.*)

[외부 클래스(external class)]
클래스의 외부에서 정의. 동일한 파일에 작성된 클래스는 동일한 패키지내의 클래스로 간주. 하나의 파일에는 최대 하나의 public class만 존재 가능 (파일 이름과 동일)
하나의 파일에 작성된 외부 클래스는 다른 패키지에서 사용 불가. 다른 패키지에서 사용하고자 한다면 파일 분리